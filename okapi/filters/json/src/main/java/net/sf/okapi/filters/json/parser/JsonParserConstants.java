/* Generated By:JavaCC: Do not edit this line. JsonParserConstants.java */
package net.sf.okapi.filters.json.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressWarnings("all")
public interface JsonParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int C_SINGLE_COMMENT = 1;
  /** RegularExpression Id. */
  int SH_SINGLE_COMMENT = 2;
  /** RegularExpression Id. */
  int C_MULTILINE_COMMENT_START = 3;
  /** RegularExpression Id. */
  int HTML_MULTILINE_COMMENT_START = 4;
  /** RegularExpression Id. */
  int C_MULTILINE_COMMENT_END = 6;
  /** RegularExpression Id. */
  int HTML_MULTILINE_COMMENT_END = 7;
  /** RegularExpression Id. */
  int UNICODE_WHITESPACE = 10;
  /** RegularExpression Id. */
  int WHITESPACE = 11;
  /** RegularExpression Id. */
  int COMMA = 12;
  /** RegularExpression Id. */
  int BRACE_OPEN = 13;
  /** RegularExpression Id. */
  int BRACE_CLOSE = 14;
  /** RegularExpression Id. */
  int COLON = 15;
  /** RegularExpression Id. */
  int BRACKET_OPEN = 16;
  /** RegularExpression Id. */
  int BRACKET_CLOSE = 17;
  /** RegularExpression Id. */
  int DOT = 18;
  /** RegularExpression Id. */
  int PLUS = 19;
  /** RegularExpression Id. */
  int MINUS = 20;
  /** RegularExpression Id. */
  int DIGIT = 21;
  /** RegularExpression Id. */
  int EXP = 22;
  /** RegularExpression Id. */
  int NUMBER = 23;
  /** RegularExpression Id. */
  int INTEGER = 24;
  /** RegularExpression Id. */
  int FRACTIONAL_DIGITS = 25;
  /** RegularExpression Id. */
  int EXPONENT = 26;
  /** RegularExpression Id. */
  int DIGITS = 27;
  /** RegularExpression Id. */
  int TRUE = 28;
  /** RegularExpression Id. */
  int FALSE = 29;
  /** RegularExpression Id. */
  int NULL = 30;
  /** RegularExpression Id. */
  int SYMBOL = 31;
  /** RegularExpression Id. */
  int LETTER = 32;
  /** RegularExpression Id. */
  int QUOTE_DOUBLE = 33;
  /** RegularExpression Id. */
  int QUOTE_SINGLE = 34;
  /** RegularExpression Id. */
  int STRING_SINGLE_EMPTY = 35;
  /** RegularExpression Id. */
  int STRING_DOUBLE_EMPTY = 36;
  /** RegularExpression Id. */
  int STRING_SINGLE_BODY = 37;
  /** RegularExpression Id. */
  int STRING_DOUBLE_BODY = 38;
  /** RegularExpression Id. */
  int STRING_SINGLE_NONEMPTY = 39;
  /** RegularExpression Id. */
  int STRING_DOUBLE_NONEMPTY = 40;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int WithinMLC = 1;
  /** Lexical state. */
  int WithinMLH = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<C_SINGLE_COMMENT>",
    "<SH_SINGLE_COMMENT>",
    "\"/*\"",
    "\"<!--\"",
    "\"/*\"",
    "\"*/\"",
    "\"-->\"",
    "<token of kind 8>",
    "<token of kind 9>",
    "<UNICODE_WHITESPACE>",
    "<WHITESPACE>",
    "\",\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\"+\"",
    "\"-\"",
    "<DIGIT>",
    "<EXP>",
    "<NUMBER>",
    "<INTEGER>",
    "<FRACTIONAL_DIGITS>",
    "<EXPONENT>",
    "<DIGITS>",
    "\"true\"",
    "\"false\"",
    "\"null\"",
    "<SYMBOL>",
    "<LETTER>",
    "\"\\\"\"",
    "\"\\\'\"",
    "\"\\\'\\\'\"",
    "\"\\\"\\\"\"",
    "<STRING_SINGLE_BODY>",
    "<STRING_DOUBLE_BODY>",
    "<STRING_SINGLE_NONEMPTY>",
    "<STRING_DOUBLE_NONEMPTY>",
  };

}
