/* Generated By:JavaCC: Do not edit this line. YamlParserConstants.java */
package net.sf.okapi.filters.yaml.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface YamlParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT_TEXT = 1;
  /** RegularExpression Id. */
  int BLOCK_SEQUENCE_START = 2;
  /** RegularExpression Id. */
  int BLOCK_MAPPING_START = 3;
  /** RegularExpression Id. */
  int BLOCK_END = 4;
  /** RegularExpression Id. */
  int NULL_SCALAR = 5;
  /** RegularExpression Id. */
  int FALSE_START = 6;
  /** RegularExpression Id. */
  int WORD_CHAR = 7;
  /** RegularExpression Id. */
  int URI_CHAR = 8;
  /** RegularExpression Id. */
  int TAG = 9;
  /** RegularExpression Id. */
  int TAG_DIRECTIVE = 10;
  /** RegularExpression Id. */
  int VERSION_TAG = 11;
  /** RegularExpression Id. */
  int ANCHOR = 12;
  /** RegularExpression Id. */
  int ALIAS = 13;
  /** RegularExpression Id. */
  int FLOW_SEQUENCE_START = 14;
  /** RegularExpression Id. */
  int FLOW_MAPPING_START = 15;
  /** RegularExpression Id. */
  int FLOW_SEQUENCE_END = 16;
  /** RegularExpression Id. */
  int FLOW_MAPPING_END = 17;
  /** RegularExpression Id. */
  int LIST_SEPERATOR = 18;
  /** RegularExpression Id. */
  int DOCUMENT_START = 19;
  /** RegularExpression Id. */
  int DOCUMENT_END = 20;
  /** RegularExpression Id. */
  int HEXNUMBER = 21;
  /** RegularExpression Id. */
  int ESCAPES = 22;
  /** RegularExpression Id. */
  int QUOTE_DOUBLE = 23;
  /** RegularExpression Id. */
  int QUOTE_SINGLE = 24;
  /** RegularExpression Id. */
  int STRING_SINGLE_BODY_FIRST = 25;
  /** RegularExpression Id. */
  int STRING_DOUBLE_BODY_FIRST = 26;
  /** RegularExpression Id. */
  int SINGLE_QUOTED_EMPTY = 27;
  /** RegularExpression Id. */
  int DOUBLE_QUOTED_EMPTY = 28;
  /** RegularExpression Id. */
  int SINGLE_QUOTED_FIRST = 29;
  /** RegularExpression Id. */
  int DOUBLE_QUOTED_FIRST = 30;
  /** RegularExpression Id. */
  int CONTINUATION_END = 31;
  /** RegularExpression Id. */
  int CONTINUATION_START = 32;
  /** RegularExpression Id. */
  int STRING_DOUBLE_BODY_SECOND = 33;
  /** RegularExpression Id. */
  int QUOTE_DOUBLE_END = 34;
  /** RegularExpression Id. */
  int STRING_SINGLE_BODY_SECOND = 35;
  /** RegularExpression Id. */
  int QUOTE_SINGLE_END = 36;
  /** RegularExpression Id. */
  int FIRST_CHARS = 37;
  /** RegularExpression Id. */
  int LITERAL_SCALAR_START = 38;
  /** RegularExpression Id. */
  int FOLDED_SCALAR_START = 39;
  /** RegularExpression Id. */
  int DASH = 40;
  /** RegularExpression Id. */
  int PAIR_SEPERATOR = 41;
  /** RegularExpression Id. */
  int SINGLE_QUOTED_KEY = 42;
  /** RegularExpression Id. */
  int DOUBLE_QUOTED_KEY = 43;
  /** RegularExpression Id. */
  int EXCLUDED_SUBSTRINGS = 44;
  /** RegularExpression Id. */
  int PLAIN_SCALAR = 45;
  /** RegularExpression Id. */
  int PLAIN_KEY = 46;
  /** RegularExpression Id. */
  int PLAIN_SCALAR_INDENTED = 47;
  /** RegularExpression Id. */
  int LITERAL_FOLDED_INDENTED = 48;
  /** RegularExpression Id. */
  int PLAIN_FLOW_SCALAR = 49;
  /** RegularExpression Id. */
  int PLAIN_FLOW_KEY = 50;
  /** RegularExpression Id. */
  int EOL = 51;
  /** RegularExpression Id. */
  int SPACE = 52;

  /** Lexical state. */
  int BLOCK_INDENTED = 0;
  /** Lexical state. */
  int INDENTED = 1;
  /** Lexical state. */
  int SINGLEQUOTE = 2;
  /** Lexical state. */
  int DOUBLEQUOTE = 3;
  /** Lexical state. */
  int DOCUMENT_START_END = 4;
  /** Lexical state. */
  int FLOW = 5;
  /** Lexical state. */
  int UNREACHABLE = 6;
  /** Lexical state. */
  int DEFAULT = 7;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<COMMENT_TEXT>",
    "\"BLOCK_SEQUENCE_START\"",
    "\"BLOCK_MAPPING_START\"",
    "\"BLOCK_END\"",
    "\"NULL_SCALAR\"",
    "\"FALSE_START\"",
    "<WORD_CHAR>",
    "<URI_CHAR>",
    "<TAG>",
    "<TAG_DIRECTIVE>",
    "<VERSION_TAG>",
    "<ANCHOR>",
    "<ALIAS>",
    "\"[\"",
    "\"{\"",
    "\"]\"",
    "\"}\"",
    "<LIST_SEPERATOR>",
    "<DOCUMENT_START>",
    "<DOCUMENT_END>",
    "<HEXNUMBER>",
    "<ESCAPES>",
    "\"\\\"\"",
    "\"\\\'\"",
    "<STRING_SINGLE_BODY_FIRST>",
    "<STRING_DOUBLE_BODY_FIRST>",
    "\"\\\'\\\'\"",
    "\"\\\"\\\"\"",
    "<SINGLE_QUOTED_FIRST>",
    "<DOUBLE_QUOTED_FIRST>",
    "<CONTINUATION_END>",
    "<CONTINUATION_START>",
    "<STRING_DOUBLE_BODY_SECOND>",
    "\"\\\"\"",
    "<STRING_SINGLE_BODY_SECOND>",
    "\"\\\'\"",
    "<FIRST_CHARS>",
    "<LITERAL_SCALAR_START>",
    "<FOLDED_SCALAR_START>",
    "<DASH>",
    "<PAIR_SEPERATOR>",
    "<SINGLE_QUOTED_KEY>",
    "<DOUBLE_QUOTED_KEY>",
    "<EXCLUDED_SUBSTRINGS>",
    "<PLAIN_SCALAR>",
    "<PLAIN_KEY>",
    "<PLAIN_SCALAR_INDENTED>",
    "<LITERAL_FOLDED_INDENTED>",
    "<PLAIN_FLOW_SCALAR>",
    "<PLAIN_FLOW_KEY>",
    "<EOL>",
    "<SPACE>",
  };

}
