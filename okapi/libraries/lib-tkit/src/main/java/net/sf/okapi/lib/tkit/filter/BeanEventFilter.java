/*===========================================================================
  Copyright (C) 2013 by the Okapi Framework contributors
-----------------------------------------------------------------------------
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
===========================================================================*/

package net.sf.okapi.lib.tkit.filter;

import net.sf.okapi.common.Event;
import net.sf.okapi.common.IParameters;
import net.sf.okapi.common.filters.AbstractFilter;
import net.sf.okapi.common.filters.IFilter;
import net.sf.okapi.common.resource.RawDocument;
import net.sf.okapi.lib.beans.sessions.OkapiJsonSession;

/**
 * An {@link IFilter} that returns serialized {@link Event}s generated by {@link OkapiJsonSession}
 * @author jimh
 *
 */
public class BeanEventFilter extends AbstractFilter {
	private OkapiJsonSession persiSession;
	private Event currentEvent;

	public BeanEventFilter() {
		persiSession = new OkapiJsonSession(true);
	}

	@Override
	public void open(RawDocument input) {
		open(input, false);
	}

	@Override
	public void open(RawDocument input, boolean generateSkeleton) {
		persiSession.start(input.getStream());
		currentEvent = deserializeEvent();
	}

	@Override
	public void setParameters(IParameters params) {
	}

	@Override
	public boolean hasNext() {
		return currentEvent != null;
	}

	@Override
	public Event next() {
		Event prevEvent = currentEvent;
		currentEvent = deserializeEvent();
		return prevEvent;
	}

	@Override
	public IParameters getParameters() {
		return null;
	}

	@Override
	protected boolean isUtf8Encoding() {
		return false;
	}

	@Override
	protected boolean isUtf8Bom() {
		return false;
	}

	@Override
	public void close() {
		persiSession.end();
	}

	/**
	 * Deserializes events from JSON files
	 * 
	 * @return null if no events are available
	 */
	protected Event deserializeEvent() {
		Event event = null;	
		event = persiSession.deserialize(Event.class);
		if (event == null) {
			persiSession.end();			
		}
		return event;
	}
}
